/*
Minhazul Hayat Khan
Website: www.minhazul.com
EWU, Bangladesh
Problem Name: --- Day 10: Hoof It ---
Problem Link: https://adventofcode.com/2024/day/10#part2
Date : 12 / 12 / 2024
Comment:
*/

#include<bits/stdc++.h>
using namespace std;

string str;
vector<string> mat;

int bfs(int x, int y);
int main(){
    while(cin >> str){
        mat.push_back(str);
    }
    vector<pair<int,int>> trailHeads;
    for(int i=0;i<mat.size();i++){
        for(int j=0;j<mat[i].size();j++){
            if(mat[i][j] == '0'){
                trailHeads.push_back(make_pair(i,j));
            }
        }
    }

    int sum = 0;
    for(int i=0;i<trailHeads.size();i++){
        sum += bfs(trailHeads[i].first, trailHeads[i].second);
    }
    cout << "The sum of the ratings of all trailheads: " << sum << endl;

    return 0;
}


int dx[] = {0,0, 1, -1};
int dy[] = {1, -1, 0, 0};

int bfs(int x, int y){
    queue<pair<int,int> > q;
    q.push(make_pair(x,y));
    int counter = 0;
    while(!q.empty()){
        int ux = q.front().first;
        int uy = q.front().second;
        q.pop();

        if(mat[ux][uy] == '9'){
            counter++;
            continue;
        }

        for(int i=0;i<4;i++){
            int vx = dx[i] + ux;
            int vy = dy[i] + uy;
            if(vx>=0 && vy >=0 && vx < mat.size() && vy < mat[i].size()){
                if(mat[vx][vy] -'0' == mat[ux][uy] - '0' + 1){
                    q.push(make_pair(vx,vy));
                }
            }
        }
    }
    return counter;
}


/* Answer: 81
89010123
78121874
87430965
96549874
45678903
32019012
01329801
10456732

*/

/* Answer: 875
6541001098012789610347890107654656710323
7832102127643898701256521218323465891410
8996543034556789650987434309012534892565
3887689678965876501874345892105621763676
4305678563456903416765676756898760654980
5214107852107812321254382347872108901221
6543236943056921010341291078963457654338
7896545987045430010980012569454968983549
3217830656189899121676101430356879892678
2106921043210778234585232321267898761432
3478854430345665056798743410456901050501
4569763521012552143895654501345012347670
3654012678903443212104309690432167898981
2783656987654874908765218781201254012567
1092347897893965889034765670387063013498
1001298756102456776121874989496122110901
2310891043201307655430923876565434325892
3456780103011218967649810189410145456743
2561078212320989858236702107320236787654
1232569343423874749145893678741199899873
0343454358514565632098704569632087684562
0456789969609034501347612189323456893001
1499876878798123101256543079012548762110
2387905462687678871212344568187659450223
3456012301056549960305650127691098321054
3456732102345832154454781034540107650169
2369847898738981023763692321121256743278
1078456654567670119832103400012349894361
0012387763456543208041076510123412765010
7650196892565454589107889623296503854321
8943256781074303673236908774387654983432
8912965890985210984365219985345015676541
7607834187866789875434308776236723498650
6506543045679012766923105698109894567743
5410432134988703457810014567056210754892
0322345028767845893456723459847349889701
1201276719454936712679801210738256776545
2450989805103221604589752345629145480230
2347823456012120113298943238710076591121
1056910147893012320107654109656789432012

*/
